{
  "category": [
    {
      "categoryName": "HTML",
      "id": "93e9"
    },
    {
      "id": "14b0",
      "categoryName": "React"
    }
  ],
  "projects": [
    {
      "title": "Loft City – Vacation Rental Website",
      "short_description": "A responsive and modern vacation rental platform built with ReactJS, designed to showcase rental properties with a clean and engaging user experience.",
      "description": "Loft City is a fully responsive web project developed with ReactJS, tailored for vacation rental businesses. The platform combines sleek design with functional UI/UX to deliver a professional and user-friendly browsing experience for travelers and property managers.\n\nThe website emphasizes visual storytelling through well-structured layouts that highlight rental properties with clarity and appeal. It’s designed with a mobile-first approach, ensuring seamless accessibility across all devices, from smartphones to desktops.\n\nBy using modular and reusable React components, Loft City ensures scalability, maintainability, and future enhancements with minimal effort. The clean codebase, along with attention to modern design practices, makes this project both a portfolio highlight and a potential real-world business solution.\n\nThis project reflects my expertise in front-end web development, responsive design, and ReactJS component architecture, as well as my passion for crafting professional and engaging digital experiences.",
      "category": "React",
      "tags": [
        "ReactJS",
        "Responsive Design",
        "Web Development",
        "Vacation Rental Website",
        "Frontend Development",
        "UI/UX Design",
        "Portfolio Project",
        "React Components",
        "Modern Web Design"
      ],
      "features": [
        "Responsive & Mobile-first Design – optimized for all screen sizes",
        "Property Showcase Layouts – clear and attractive sections for vacation rentals",
        "Clean UI/UX – focused on simplicity and visual appeal",
        "Reusable React Components – modular codebase for scalability",
        "Fast & Lightweight – optimized performance for smooth browsing",
        "Future-ready – easily extendable for booking systems",
        "filters",
        "and admin dashboards."
      ],
      "techStack": [
        "React",
        "Tailwind",
        "TypeScript",
        "React Router",
        "React Icons"
      ],
      "images": [
        "https://res.cloudinary.com/dfdzkqstt/image/upload/v1755680854/Screenshot_622_j3hrer.png",
        "https://res.cloudinary.com/dfdzkqstt/image/upload/v1755681013/Screenshot_627_xpvc7n.png",
        "https://res.cloudinary.com/dfdzkqstt/image/upload/v1755681013/Screenshot_628_tfc7hg.png",
        "https://res.cloudinary.com/dfdzkqstt/image/upload/v1755681013/Screenshot_623_eemo4i.png"
      ],
      "links": {
        "github": "https://github.com/sheikh92areeb/loft-city",
        "live": "https://loftcity.netlify.app/"
      },
      "id": "f733"
    },
    {
      "id": "19d9",
      "title": "Weather App – Real-Time Weather App",
      "short_description": "A simple and responsive weather application built with HTML, CSS, and JavaScript that fetches real-time weather data using a public Weather API.",
      "description": "Weather App is a responsive web application designed to provide real-time weather updates for any city worldwide. Developed with vanilla HTML, CSS, and JavaScript, the app consumes a public Weather API to deliver accurate and up-to-date information including temperature, humidity, wind speed, and weather conditions.\\n\\nThe application focuses on simplicity and usability, offering a clean user interface with intuitive search functionality. A mobile-first approach ensures smooth accessibility across devices, from smartphones to desktops. By leveraging asynchronous JavaScript (fetch API), WeatherNow delivers quick responses and enhances user interaction.\\n\\nThis project demonstrates core web development skills, API integration, and dynamic DOM manipulation without relying on frameworks. It is an excellent showcase of problem-solving, responsiveness, and practical implementation of real-world API data.",
      "category": "HTML",
      "tags": [
        "JavaScript",
        "Weather API",
        "Responsive Design",
        "Frontend Development",
        "Real-Time Data",
        "Vanilla JS",
        "Dynamic DOM",
        "API Integration"
      ],
      "features": [
        "Real-time Weather Data – fetches live weather details using API",
        "City-based Search – users can search for any city worldwide",
        "Responsive Design – optimized for mobile",
        "tablet",
        "and desktop devices",
        "Dynamic UI Updates – weather info displayed instantly without page reload",
        "Error Handling – user-friendly messages for invalid inputs or API errors",
        "Clean and Minimal Interface – focused on simplicity and readability"
      ],
      "techStack": [
        "HTML",
        "CSS",
        "JavaScript",
        "Weather API"
      ],
      "images": [
        "https://res.cloudinary.com/dfdzkqstt/image/upload/v1757185204/Screenshot_2025-03-20_181458_j46wu4.png",
        "https://res.cloudinary.com/dfdzkqstt/image/upload/v1757185205/Screenshot_2025-03-20_181522_y1czjk.png"
      ],
      "links": {
        "github": "",
        "live": "https://weather-app-118.netlify.app/"
      }
    }
  ]
}